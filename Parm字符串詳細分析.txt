==== 📊 Parm 字符串詳細分析 ====

【原始 parm（十六進位字符串）】
02020a5e010002010001000201000a00000000000000830628210b000128000087000900d2005e015a00780046000e0128000000140000000000323232320a0a00

【轉換成字節對】
02 02 0a 5e 01 00 02 01 00 01 00 02 01 00 0a 00 
00 00 00 00 00 00 83 06 28 21 0b 00 01 28 00 00 
87 00 09 00 d2 00 5e 01 5a 00 78 00 46 00 0e 01 
28 00 00 00 14 00 00 00 00 00 00 32 32 32 32 0a 0a 00

【位置對應】
位置:  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
字節: 02 02 0a 5e 01 00 02 01 00 01 00 02 01 00 0a 00

位置: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
字節: 00 00 00 00 00 00 83 06 28 21 0b 00 01 28 00 00

位置: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
字節: 87 00 09 00 d2 00 5e 01 5a 00 78 00 46 00 0e 01

位置: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
字節: 28 00 00 00 14 00 00 00 00 00 00 32 32 32 32 0a

位置: 64 65 66
字節: 0a 00

╔════════════════════════════════════════════════════════════════════════════╗
║ 關鍵位置檢查                                                              ║
╚════════════════════════════════════════════════════════════════════════════╝

【位置 36-39】(你指定的位置)
bytes[36] = 0x87 = 135
bytes[37] = 0x00 = 0
bytes[38] = 0x09 = 9
bytes[39] = 0x00 = 0

計算 (Little-Endian 16位):
  投幣數 (C2) = bytes[36] + (bytes[37] << 8)
             = 0x87 + (0x00 << 8)
             = 135 + 0
             = 135 ✅

  出貨數 (C3) = bytes[38] + (bytes[39] << 8)
             = 0x09 + (0x00 << 8)
             = 9 + 0
             = 9 ✅

【位置 32-35】(備用)
bytes[32] = 0x87 = 135
bytes[33] = 0x00 = 0
bytes[34] = 0x09 = 0
bytes[35] = 0x00 = 0

計算:
  plays = 0x87 + (0x00 << 8) = 135
  payouts = 0x09 + (0x00 << 8) = 9

【位置 42-45】
bytes[42] = 0xd2 = 210
bytes[43] = 0x00 = 0
bytes[44] = 0x5e = 94
bytes[45] = 0x01 = 1

計算:
  plays = 0xd2 + (0x00 << 8) = 210
  payouts = 0x5e + (0x01 << 8) = 94 + 256 = 350 ❌ (payouts > plays，不合理)

【位置 52-55】
bytes[52] = 0x14 = 20
bytes[53] = 0x00 = 0
bytes[54] = 0x00 = 0
bytes[55] = 0x00 = 0

計算:
  plays = 0x14 + (0x00 << 8) = 20
  payouts = 0x00 + (0x00 << 8) = 0

╔════════════════════════════════════════════════════════════════════════════╗
║ 結論                                                                       ║
╚════════════════════════════════════════════════════════════════════════════╝

✅ 位置 36-39：投幣數 = 135，出貨數 = 9
   - isValidPair(135, 9) = true ✅
   - 因為 135 > 0 且 9 <= 135

❌ 位置 42-45：投幣數 = 210，出貨數 = 350
   - isValidPair(210, 350) = false ❌
   - 因為 350 > 210 (出貨數不能多於投幣數)

✅ 位置 52-55：投幣數 = 20，出貨數 = 0
   - isValidPair(20, 0) = true ✅
   - 因為 20 > 0 且 0 <= 20

【當前代碼應該做什麼】
1️⃣ 嘗試位置 36-39 → 得到 135, 9 → 驗證通過 ✅
2️⃣ 返回結果，顯示投幣數=135, 出貨數=9

【頁面應該顯示】
✅ 投幣遊戲次數: 135
✅ 禮品出獎次數: 9
