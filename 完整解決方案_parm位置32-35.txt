==== 🎯 parm 數據解析問題 - 完整解決方案 ====

【問題描述】
系統無法正確解析 parm 十六進位數據中的投幣數和出貨次數

【根本原因】
位置計算錯誤。之前誤認為位置是 36-39 或 42-45，實際上是 32-35

【解決過程】

1️⃣ 初始假設 (錯誤)
   位置: 60-62 → 36-39 → 39-42 → 42-45 → 52-55
   結果: 都讀不對

2️⃣ 時間戳排序修正
   - 問題: 倒序遍歷不等於時間倒序
   - 解決: 使用時間戳明確排序，確保取最新的 parm
   - 結果: ✅ 成功取得 2025-10-23 09:48:11 的新 parm

3️⃣ 位置精確定位
   - 接收到完整 parm 字符串分析
   - 轉換為字節陣列：65 個字節
   - 前 40 個字節:
     [0-31]:  2, 2, 10, 94, 1, 0, 2, 1, 0, 1, 0, 2, 1, 0, 10, 0, 
              0, 0, 0, 0, 0, 0, 131, 6, 40, 33, 11, 0, 1, 40, 0, 0
     [32-39]: 135, 0, 9, 0, 210, 0, 94, 1
                  ↑ pos32 ✅ 正確位置

【最終解決方案】

✅ 位置 32-35 (正確位置)
   Byte[32] = 0x87 = 135   → 投幣數
   Byte[33] = 0x00 = 0
   Byte[34] = 0x09 = 9     → 出貨次數  
   Byte[35] = 0x00 = 0

   計算公式 (Little-Endian):
   plays = bytes[32] + (bytes[33] << 8) = 135 + (0 << 8) = 135 ✅
   payouts = bytes[34] + (bytes[35] << 8) = 9 + (0 << 8) = 9 ✅

【備用位置】(如果位置 32-35 無效)
   - 位置 36-39
   - 位置 42-45
   - 位置 52-55

【驗證邏輯】
使用 isValidPair(plays, payouts):
- plays > 0 且 plays < 1000000
- payouts >= 0 且 payouts <= plays 且 payouts < 1000000

對於 (135, 9):
- 135 > 0 ✅
- 9 <= 135 ✅
- 驗證通過 ✅

【代碼修改】
文件: index.html
函數: parseReReadData()
位置: 約第 2030-2080 行

核心邏輯:
```javascript
// 主要位置 (32-35)
if (bytes.length >= 36) {
    const plays = bytes[32] + (bytes[33] << 8);
    const payouts = bytes[34] + (bytes[35] << 8);
    if (isValidPair(plays, payouts)) {
        result.plays = plays;
        result.payouts = payouts;
        return result;
    }
}

// 備用位置
const knownPositions = [
    {name: '位置36-39', start: 36},
    {name: '位置42-45', start: 42},
    {name: '位置52-55', start: 52}
];
// 逐一嘗試...
```

【最終結果】
✅ 系統正確顯示:
   - 投幣遊戲次數: 135
   - 禮品出獎次數: 9
   - 時間戳: 2025-10-23 09:48:11
   - DevID: 1 (左天車)

【系統改進總結】
1. ✅ MQTT → HTTP 協議轉換
2. ✅ 登陸問題修復 (JS加載順序)
3. ✅ CORS/代理系統
4. ✅ 輪詢間隔可配置 (9 個選項)
5. ✅ 多 devid 支持 (獨立輪詢和存儲)
6. ✅ 時間戳排序 (取最新數據)
7. ✅ 多位置動態 fallback (32-35 主要，36-39/42-45/52-55 備用)
8. ✅ 數據驗證 (isValidPair)

【後續考慮】
- 監控其他 devid 的 parm 位置是否相同
- 定期檢查位置 32-35 是否穩定
- 如有變化，可能需要添加固件版本檢測
