# ⚡ 輪詢間隔快速參考

## 🎯 快速使用

### 在 UI 中更改
1. 找到「HTTP 即時同步」區域
2. 在「間隔：」下拉菜單中選擇時間
3. ✅ 完成！自動生效

### 在控制台中更改
```javascript
// 改為 1 秒
document.getElementById('poll-interval').value = 1000;
stopAutoPolling();
startAutoPolling();
```

---

## 📊 間隔選項表

```
0.5秒  ───────── 超高頻（實時演示）
1秒    ───────── 高頻（實時監控）
2秒    ───────── 快速（快速反應）
3秒    ───────── 中快速（通用實時）
5秒    ───────── 中等（一般應用）
10秒   ────────  ⭐ 默認（最推薦）
30秒   ───────── 低頻（有限網路）
1分鐘  ───────── 很低頻（移動設備）
5分鐘  ───────── 極低頻（省電模式）
```

---

## ⚠️ 性能指南

| 間隔 | 每分鐘請求 | 每小時流量* | 建議 |
|------|-----------|-----------|------|
| 0.5秒 | 120 | ~29 MB | ⚡ 只限演示 |
| 1秒 | 60 | ~14 MB | 🚀 實時監控 |
| 2秒 | 30 | ~7 MB | ⚙️ 可接受 |
| 5秒 | 12 | ~3 MB | ✅ 推薦 |
| 10秒 | 6 | ~1.5 MB | ✅✅ 最推薦 |
| 30秒 | 2 | ~0.5 MB | 💾 省流量 |

*估計值，基於每個回應 500 bytes

---

## 💡 使用建議

| 場景 | 推薦間隔 | 原因 |
|------|---------|------|
| 實時監控演示 | 0.5-1秒 | 要看到數據實時變化 |
| 緊急狀況監測 | 2-3秒 | 快速反應 + 合理負載 |
| 日常業務應用 | 10秒 | ✅ 最平衡 |
| 定期檢查 | 30秒-1分鐘 | 不需要實時更新 |
| 移動應用 | 30秒 + | 省電且省流量 |

---

## 🔧 常用命令

```javascript
// 查看當前配置
console.log('間隔(ms):', document.getElementById('poll-interval').value);
console.log('已啟用:', document.getElementById('auto-poll-enabled').checked);

// 快速改間隔
document.getElementById('poll-interval').value = 2000; // 2秒

// 重啟輪詢
stopAutoPolling();
startAutoPolling();

// 查看統計
console.log('請求:', httpRequestCount, '錯誤:', httpErrorCount);
```

---

## ✅ 檢查清單

- [ ] 選擇了合適的輪詢間隔
- [ ] 根據網路環境調整了間隔
- [ ] 確認輪詢已啟用
- [ ] 監控了伺服器負載
- [ ] 在控制台看到了實時日誌

---

**修改日期**：2025-10-23 ✅ 完成
