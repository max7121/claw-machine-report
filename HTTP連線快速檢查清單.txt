# 🔧 HTTP 連線故障排除 - 快速檢查清單

## ⚡ 快速診斷（5 分鐘）

### 第一步：確認網路連接
```
✅ 能訪問其他網站嗎？（如 Google）
✅ WiFi/有線連接正常嗎？
```

### 第二步：運行自動診斷
1. 按 **F12** 打開開發者工具
2. 切換到 **Console** 選項卡
3. 複製粘貼並運行：
```javascript
diagnoseHttpConnection()
```

### 第三步：查看診斷結果
根據診斷報告中的 ✅ 或 ❌ 確定問題：

```
✅ 直接請求成功？    → 已修復，問題已解決
❌ 直接請求失敗      → 進入【詳細診斷】
❌ 代理也失敗        → 網路或伺服器問題
```

---

## 🔍 詳細診斷（按順序檢查）

### 檢查 1：網路連接
```javascript
// 在 Console 中運行
fetch('https://www.google.com', {mode: 'no-cors'})
  .then(() => console.log('✅ 網路正常'))
  .catch(e => console.log('❌ 網路問題:', e.message))
```

**結果**：
- ✅ 網路正常 → 進入檢查 2
- ❌ 網路問題 → 重新連接網路或重啟路由器

---

### 檢查 2：目標伺服器可達性
```javascript
// 查看目標 URL
console.log(buildHttpUrl())
```

**在新分頁中訪問這個 URL**

**結果**：
- ✅ 可以打開且有數據 → 問題在代理配置，進入檢查 3
- ❌ 無法打開 / 無響應 → 伺服器離線，聯繫管理員

---

### 檢查 3：DNS 解析
```javascript
// 在 Console 中運行
console.log('目標域名: update.feiloli.com.tw')
console.log('嘗試解析...')
fetch('http://update.feiloli.com.tw:5539/textselectdata/test', {mode: 'no-cors'})
  .catch(e => {
    if (e.message.includes('ERR_NAME_NOT_RESOLVED')) {
      console.log('❌ DNS 無法解析，嘗試切換 DNS')
    }
  })
```

**結果**：
- ✅ 可以解析 → 進入檢查 4
- ❌ ERR_NAME_NOT_RESOLVED → 執行【DNS 修復】

---

### 檢查 4：CORS 策略
```javascript
// 驗證代理是否工作
fetch('https://api.allorigins.win/get?url=http://example.com')
  .then(r => r.json())
  .then(d => console.log('✅ 代理服務正常'))
  .catch(e => console.log('❌ 代理服務異常:', e.message))
```

**結果**：
- ✅ 代理正常 → 問題可能在目標伺服器
- ❌ 代理異常 → 網路問題，重試或切換網路

---

## 🛠️ 快速修復

### 修復 1：刷新頁面
```
按 Ctrl + F5（硬刷新）或 Cmd + Shift + R
```
- 清除緩存重新加載

---

### 修復 2：切換 DNS（5 分鐘）

#### Windows 用戶
1. 右鍵點擊「網路」→「屬性」
2. 找到當前網路→「變更適配器選項」
3. 右鍵點擊網路連接→「屬性」
4. 雙擊「網際網路通訊協定 (TCP/IPv4)」
5. 選擇「使用下列 DNS 伺服器位址」
6. 輸入：
   - 首選：`8.8.8.8`
   - 備用：`8.8.4.4`
7. 確定→重啟瀏覽器

#### Mac 用戶
1. 系統偏好設定 → 網路
2. 選擇連接 → 進階
3. DNS 選項卡
4. 點擊 + 號添加：
   - `8.8.8.8`
   - `8.8.4.4`
5. 確定

#### Linux 用戶
編輯 `/etc/resolv.conf`：
```bash
sudo nano /etc/resolv.conf
```
添加：
```
nameserver 8.8.8.8
nameserver 8.8.4.4
```

---

### 修復 3：嘗試使用 VPN
- 啟用 VPN 或代理
- 可以繞過地區限制

---

### 修復 4：使用本地代理伺服器

**快速設置（需要 Node.js）**：

1. 在桌面創建文件 `proxy.js`：
```javascript
const http = require('http');
const PORT = 3000;
const server = http.createServer((req, res) => {
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET');
  if (req.url.includes('/textselectdata')) {
    res.end('{"status":"ok"}');
  }
});
server.listen(PORT);
console.log('代理運行在 localhost:3000');
```

2. 運行：
```bash
node proxy.js
```

3. 在代碼中修改（第 ~1475 行）：
```javascript
baseUrl: 'http://localhost:3000'
```

---

## 📊 狀態檢查表

完成以下檢查，標記結果：

```
[ ] 網路可以訪問其他網站
[ ] diagnoseHttpConnection() 顯示詳細信息
[ ] 可以直接在瀏覽器訪問目標 URL
[ ] DNS 可以解析 update.feiloli.com.tw
[ ] 代理服務 (AllOrigins) 正常工作
[ ] 沒有 ERR_NAME_NOT_RESOLVED 錯誤
[ ] 沒有 CORS 錯誤
[ ] 數據成功返回
```

全部打勾 ✅ = 問題已解決

---

## 🆘 如果以上都不行

請收集以下信息並聯繫支持：

1. **診斷報告**：
```javascript
// 複製以下命令的全部輸出
console.log('=== 診斷報告 ===')
console.log('瀏覽器:', navigator.userAgent)
console.log('頁面 URL:', window.location.href)
diagnoseHttpConnection()
```

2. **錯誤截圖**：截圖 Console 中的所有紅色/黃色錯誤

3. **網路環境**：
   - 是否在公司/校園網？
   - 是否使用代理或 VPN？
   - 使用的運營商？

---

## 📞 常用命令參考

| 功能 | 命令 |
|------|------|
| 完整診斷 | `diagnoseHttpConnection()` |
| 快速測試 | `testHttpConnection()` |
| 查看配置 | `console.log(httpConfig)` |
| 查看目標 URL | `console.log(buildHttpUrl())` |
| 查看最後回應 | `console.log(httpLastResponse)` |
| 手動發送請求 | `sendHttpRequest()` |
| 啟動輪詢 | `startHttpPolling()` |
| 停止輪詢 | `stopHttpPolling()` |

---

## ✅ 驗證修復成功

### 測試方法 1：使用按鈕
在頁面上點擊「🔗 測試 HTTP 連線」按鈕

### 測試方法 2：使用命令
在 Console 執行：
```javascript
await testHttpConnection()
```

### 預期結果
```
✅ HTTP 連線測試成功！
   數據已成功返回
```

---

**修改時間**：2025-10-23
**適用版本**：修改後的 index.html
