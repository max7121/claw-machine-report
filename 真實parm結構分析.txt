🔍 真實 parm 結構分析
====================

## 觀察到的日誌

```
devid: 1
✅ 主位置 (42-45): plays=70, payouts=270

devid: 2  
✅ 主位置 (52-55): plays=0, payouts=0

試位置 (2-6, 6-10): plays=89610, payouts=16777474
試位置 (4-8, 8-12): plays=16988289, payouts=33554688
試位置 (8-12, 12-16): plays=33554688, payouts=655361
試位置 (10-14, 14-18): plays=66048, payouts=10
```

## 關鍵發現

1. **devid=1 在位置 42-45 讀到 70, 270**
   - 但這應該也是錯誤的值（根據您之前的 parm，位置 42-45 應該是 87 00 09 00）

2. **devid=2 在位置 52-55 讀到 0, 0**
   - 位移策略完全錯誤！

3. **試位置 (10-14, 14-18) 得到 66048, 10**
   - 這正是 UI 顯示的值！
   - 系統在用備用方法返回的

## 💡 真相

**所有 parm 可能都用位置 (10-14, 14-18)，不是 42-45 或 52-55！**

即：
```
plays = bytes[10] | (bytes[11] << 8) | (bytes[12] << 16) | (bytes[13] << 24)
payouts = bytes[14] | (bytes[15] << 8) | (bytes[16] << 16) | (bytes[17] << 24)
```

**需要確認:**
- 新 parm 對應的實際投幣和出獎應該是多少？
- 是 70/270 還是其他值？
